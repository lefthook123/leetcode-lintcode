/*Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result=new ArrayList<String>();
        if(root == null){
            return result;
        }
        List<Integer> sub=new ArrayList<Integer>();
        helper(result,root,sub);
        return result;
    }
    public void helper(List<String> result,TreeNode root,List<Integer> sub){
        if(root.left == null && root.right == null){
            StringBuffer br=new StringBuffer();
            for(Integer i:sub){
                br.append(i);
                br.append("->");
            }
            br.append(root.val);
            result.add(br.toString());
            return;
        }
        sub.add(root.val);
        if(root.left != null){
            helper(result,root.left,sub);
        }
        if(root.right != null){
            helper(result,root.right,sub);
        }
        sub.remove(sub.size()-1);
    }
}
