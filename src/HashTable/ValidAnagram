/*Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?
*/
public class Solution {
    public boolean isAnagram(String s, String t) {
        if(s == null || s.length() == 0){
            return t == null || t.length() == 0;
        }
        if(s.length() != t.length()){
            return false;
        }
        Map<Character,Integer> map=new HashMap<Character,Integer>();
        for(int i=0;i<s.length();++i){
            char a=s.charAt(i);
            if(!map.containsKey(a)){
                map.put(a,1);
            }else{
                map.put(a,map.get(a)+1);
            }
        }
        for(int i=0;i<t.length();++i){
            char a=t.charAt(i);
            if(!map.containsKey(a)){
                return false;
            }
            if(map.get(a)<1){
                return false;
            }
            map.put(a,map.get(a)-1);
        }
        return true;
    }
}
