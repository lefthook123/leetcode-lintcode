/*Question: You are designing a New User sign-up form for a website. When a user enters text in
the password field, you want to suggest possible 'stronger' passwords to the user by swapping in
special characters, like turning an "a" into an "@". Given a password represented as a string and
a character map that contains common characters and substitutions, create a list of all possible
password combinations that can be created.
Example:
Input : Map : {{ 'i' , '!' } , { 'a' , '@' } , { 's' , '$' } , { 'o' , '0' } , { 'E' , '3' }} Password : password
*/


  public static void main(String[] args) {
//         MyHashTable<Integer,String> mytable = new MyHashTable<Integer,String>(10);
//         mytable.put(3,"string");
//         mytable.put(4,"5");
//         mytable.put(6,"8");

//         System.out.println(mytable.containsValue("5"));
    Map<Character,Character> map=new HashMap<Character,Character>();
    map.put('i','!');
    map.put('a','@');
    map.put('s','$');
    map.put('o','o');
    map.put('E','3');
 List<String> set=getPwd("password",map);
    for(String str:set){
      System.out.println(str);
    }
  }
  public static List<String> getPwd(String password,Map<Character,Character> map){
    List<String> result=new ArrayList<String>();
    if(password == null || password.length() == 0){
      return result;
    }
    Set<String> set=new HashSet<String>();
    List<Character> sub=new ArrayList<Character>();
    helper(set,sub,password,map,0);
    for(String str:set){
      result.add(str);
    }
    return result;
  }
  public static void helper(Set<String> set,List<Character> sub,String str,Map<Character,Character> map, int pos){
    if(pos == str.length()){
      StringBuffer br=new StringBuffer();
      for(char a:sub){
        br.append(a);
      }
      set.add(br.toString());
      return;
    }
      char a=str.charAt(pos);
      if(map.containsKey(a)){
        sub.add(map.get(a));
        helper(set,sub,str,map,pos+1);
        sub.remove(sub.size()-1);
      }
        sub.add(a);
        helper(set,sub,str,map,pos+1);
            sub.remove(sub.size()-1);

      //System.out.println("sub:"+sub);
  }
