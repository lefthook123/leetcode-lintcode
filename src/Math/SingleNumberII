//http://blog.csdn.net/fightforyourdream/article/details/14634123
public class Solution {
	/**
	 * @param A : An integer array
	 * @return : An integer 
	 */
	//http://blog.csdn.net/fightforyourdream/article/details/14634123
	  /*比如题目改成其他数字都出现k次 k大于等于3转换成二进制度，每一位累加起来是可以mod k 的，除了只出现一次的哪一位
	  */
    public int singleNumberII(int[] A) {
        int[] bits = new int[32];
        int currPtr = 1;
        for(int i=0; i <32; i++) {
            int cnt = 0;
            for(int j=0; j < A.length; j++) {
                if((A[j] & currPtr) != 0) {
                    cnt++;
                }    
                
            }
            bits[i] = cnt %3;
            currPtr = currPtr <<1;
        }
        int res = 0;
        for(int i=0; i < 32; i++) {
            res |= (bits[i] <<i);
        }
        return res;
    }
}
public class Solution {
    public int singleNumber(int[] nums) {
        if(nums == null || nums.length == 0){
            return 0;
        }
        int[] digit=new int[32];
        int count=1;
        for(int i=0;i<32;++i){
            for(int j:nums){
                if((j & count) != 0){
                    digit[i]++;
                }
            }
            digit[i]=digit[i]%3;
            count=count<<1;
        }
        int result=0;
        for(int i=0;i<32;++i){
            result|=(digit[i]<<i);
        }
        return result;
    }
}
