/*Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Could you do it in-place without allocating extra space?
*/
public class Solution {
    public void reverseWords(char[] s) {
        if(s == null || s.length == 0){
            return;
        }
        //reverse whole character
        reverse(s,0,s.length-1);
        int start=0,end=0;
        for(int i=0;i<s.length;++i){
            if(s[i]==' '){
                //find word and reverse
                reverse(s,start,i-1);
                start=i+1;
            }
        }
        //reverse the last word or just one word in the char[] s
        reverse(s,start,s.length-1);
    }
    public void reverse(char[] s,int start,int end){
        while(start<end){
            char a=s[start];
            s[start]=s[end];
            s[end]=a;
            start++;
            end--;
        }
    }
}
