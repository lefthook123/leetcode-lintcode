/*Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.


Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].


The largest rectangle is shown in the shaded area, which has area = 10 unit.

For example,
Given height = [2,1,5,6,2,3],
return 10.

http://www.cnblogs.com/yuzhangcmu/p/4191981.html
实现一个递增的栈，如果新来的比peek小，说明peek这个值到头了，要计算了。




*/
public class Solution {
    public int largestRectangleArea(int[] height) {
        if(height == null || height.length == 0){
            return 0;
        }
        Stack<Integer> stack=new Stack<Integer>();
        int max=0;
        for(int i=0;i<=height.length;++i){
            int cur=(i == height.length)?-1:height[i];
            while(!stack.isEmpty() && height[stack.peek()]>cur){
                int h=height[stack.pop()];
                int w=stack.isEmpty()?i:i-stack.peek()-1;
                max=Math.max(max,h*w);
            }
            stack.push(i);
        }
        return max;
    }
}
